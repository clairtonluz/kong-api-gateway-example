x-kong-config: &kong-db-env
  KONG_DATABASE: ${KONG_DATABASE}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE}
  KONG_PG_HOST: ${KONG_PG_HOST}
  KONG_PG_USER: ${KONG_PG_USER}
  KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
  
x-konga-template: &konga-template
  image: pantsel/konga:0.14.9
  platform: linux/amd64
  environment:
    # HOST: konga.seduc.ce.gov.br
    # DB_PG_SCHEMA: konga
    DB_ADAPTER: ${KONGA_DB_ADAPTER}
    DB_HOST: ${KONGA_DB_HOST}
    DB_PORT: ${KONGA_DB_PORT}
    DB_USER: ${KONGA_DB_USER}
    DB_PASSWORD: ${KONGA_DB_PASSWORD}
    DB_DATABASE: ${KONGA_DB_DATABASE}
    TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
    NODE_ENV: ${KONGA_NODE_ENV}
  networks:
    - kong-net
  restart: on-failure
  security_opt:
    - no-new-privileges

volumes:
  kong_data: {}
  konga_data: {}
  kong_prefix_vol:
  kong_tmp_vol:

networks:
  kong-net:

services:
  kong-migrations:
    image: kong:3.4.0
    command: kong migrations bootstrap
    profiles: ["database"]
    depends_on:
      - db-kong
    environment:
      <<: *kong-db-env
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    extends: kong-migrations
    command: kong migrations up && kong migrations finish
    depends_on:
      - db-kong
    
  kong:
    image: kong:3.4.0
    user: kong
    environment:
      <<: *kong-db-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      # KONG_PREFIX: /var/run/kong
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
      - "8001:8001/tcp"
      - "8444:8444/tcp"
      - "8002:8002/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    # read_only: true
    volumes:
      - kong_prefix_vol:/var/run/kong
      - kong_tmp_vol:/tmp
      # - ./config:/opt/kong
    security_opt:
      - no-new-privileges
    depends_on:
      - db-kong

  konga:
    <<: *konga-template
    depends_on:
      - kong
    ports:
      - "1337:1337"
    
  konga-prepare:
    container_name: konga-prepare
    <<: *konga-template
    profiles: ["database"]
    command: "-c prepare -a postgres -u postgresql:${KONGA_DB_USER}:${KONGA_DB_PASSWORD}@${KONGA_DB_HOST}:${KONGA_DB_PORT}/${KONGA_DB_DATABASE}"
    depends_on:
      - db-konga

  db-kong:
    image: postgres:9.5
    profiles: ["database"]
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE}
      POSTGRES_USER: ${KONG_PG_USER}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    # stdin_open: true
    # tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  db-konga:
    extends: db-kong
    environment:
      POSTGRES_DB: ${KONGA_DB_DATABASE}
      POSTGRES_USER: ${KONGA_DB_USER}
      POSTGRES_PASSWORD: ${KONGA_DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONGA_DB_USER}"]
    volumes:
      - konga_data:/var/lib/postgresql/data
  